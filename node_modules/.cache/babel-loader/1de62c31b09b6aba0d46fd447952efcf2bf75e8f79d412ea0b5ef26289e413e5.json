{"ast":null,"code":"import React,{useState}from'react';import functions from\"./functionModules\";import dictionaries from\"./API's\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function SearchDefinition(){const[dictionaryDefinitions,setDictionaryDefinitions]=useState([]);const handleSubmit=async e=>{e.preventDefault();const wordToSearch=e.target.querySelector('input[id=\"search-bar\"]').value;const defaultDictionaryDefinitions=await dictionaries.getWordDefaultDictionary(wordToSearch);const urbanDictionaryDefinitions=await dictionaries.getUrbanDictionaryDefinitions(wordToSearch);const WordDefFR=await dictionaries.getWordDefFR(wordToSearch);setDictionaryDefinitions([{'dictionaryName':'Default Dictionary','dictionary':defaultDictionaryDefinitions},{'dictionaryName':'Urban Dictionary','dictionary':urbanDictionaryDefinitions},{'dictionaryName':'getWordDefFR','dictionary':WordDefFR}]);};function ShowDefinitions(){const[openStates,setOpenStates]=useState(dictionaryDefinitions.map(()=>false));const toggleDictionary=index=>{const newOpenStates=[...openStates];newOpenStates[index]=!newOpenStates[index];setOpenStates(newOpenStates);};const dictionaryDivs=dictionaryDefinitions.map((dictionary,index)=>{try{const definitionHeaders=[];for(const[meaning,definitions]of Object.entries(dictionary.dictionary)){definitions.forEach(definition=>{definitionHeaders.push(/*#__PURE__*/_jsx(\"h3\",{className:\"definition-header\",children:definition.definition},definition.definition));});}return/*#__PURE__*/_jsxs(\"div\",{className:\"dictionary-div\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"collapse-button\",onClick:()=>toggleDictionary(index),children:dictionary.dictionaryName}),/*#__PURE__*/_jsx(\"div\",{className:\"dictionary-div-content\",children:openStates[index]&&definitionHeaders})]},dictionary.dictionaryName);}catch(error){console.log(error);}});if(dictionaryDivs.every(div=>{return div===undefined;})){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h2\",{children:\"No definitions found \\uD83D\\uDE14\"})});}return dictionaryDivs;}return/*#__PURE__*/_jsxs(\"div\",{id:\"definition-container\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,action:\"#\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"search-bar\",className:\"search-input\",placeholder:\"Search\"}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Search\",className:\"submit-button\"})]}),/*#__PURE__*/_jsx(\"div\",{id:\"definition-div\",children:/*#__PURE__*/_jsx(ShowDefinitions,{})})]});}const components={SearchDefinition};export default components;","map":{"version":3,"names":["React","useState","functions","dictionaries","jsx","_jsx","jsxs","_jsxs","SearchDefinition","dictionaryDefinitions","setDictionaryDefinitions","handleSubmit","e","preventDefault","wordToSearch","target","querySelector","value","defaultDictionaryDefinitions","getWordDefaultDictionary","urbanDictionaryDefinitions","getUrbanDictionaryDefinitions","WordDefFR","getWordDefFR","ShowDefinitions","openStates","setOpenStates","map","toggleDictionary","index","newOpenStates","dictionaryDivs","dictionary","definitionHeaders","meaning","definitions","Object","entries","forEach","definition","push","className","children","type","onClick","dictionaryName","error","console","log","every","div","undefined","id","onSubmit","action","placeholder","components"],"sources":["C:/Programming/React/definition-app/src/Modules/components.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport functions from \"./functionModules\";\r\nimport dictionaries from \"./API's\";\r\n\r\nfunction SearchDefinition() {\r\n    const [dictionaryDefinitions, setDictionaryDefinitions] = useState([]);\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const wordToSearch = e.target.querySelector('input[id=\"search-bar\"]').value;\r\n        const defaultDictionaryDefinitions = await dictionaries.getWordDefaultDictionary(wordToSearch)\r\n        const urbanDictionaryDefinitions = await dictionaries.getUrbanDictionaryDefinitions(wordToSearch)\r\n        const WordDefFR = await dictionaries.getWordDefFR(wordToSearch)\r\n        setDictionaryDefinitions([\r\n            { 'dictionaryName': 'Default Dictionary', 'dictionary': defaultDictionaryDefinitions },\r\n            { 'dictionaryName': 'Urban Dictionary', 'dictionary': urbanDictionaryDefinitions },\r\n            { 'dictionaryName': 'getWordDefFR', 'dictionary': WordDefFR}\r\n        ]);\r\n    }\r\n\r\n    function ShowDefinitions() {\r\n        const [openStates, setOpenStates] = useState(dictionaryDefinitions.map(() => false));\r\n\r\n        const toggleDictionary = (index) => {\r\n            const newOpenStates = [...openStates];\r\n            newOpenStates[index] = !newOpenStates[index];\r\n            setOpenStates(newOpenStates);\r\n        };\r\n\r\n        const dictionaryDivs = dictionaryDefinitions.map((dictionary, index) => {\r\n            try {\r\n                const definitionHeaders = [];\r\n                for (const [meaning, definitions] of Object.entries(dictionary.dictionary)) {\r\n                    definitions.forEach(definition => {\r\n                        definitionHeaders.push(\r\n                            <h3 className={\"definition-header\"} key={definition.definition}>{definition.definition}</h3>\r\n                        );\r\n                    });\r\n                }\r\n\r\n                return (\r\n                    <div className={\"dictionary-div\"} key={dictionary.dictionaryName}>\r\n                        <button\r\n                            type={\"button\"}\r\n                            className={\"collapse-button\"}\r\n                            onClick={() => toggleDictionary(index)}\r\n                        >\r\n                            {dictionary.dictionaryName}\r\n                        </button>\r\n                        <div className={\"dictionary-div-content\"}>\r\n                            {openStates[ index ] && definitionHeaders}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            } catch(error) {\r\n                console.log(error);\r\n            }\r\n        });\r\n\r\n        if (dictionaryDivs.every(div => {\r\n            return div === undefined\r\n        })) {\r\n            return (\r\n                <div>\r\n                    <h2>No definitions found ðŸ˜”</h2>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return dictionaryDivs;\r\n    }\r\n\r\n    return (\r\n        <div id={\"definition-container\"}>\r\n            <form onSubmit={handleSubmit} action=\"#\">\r\n                <input\r\n                    id=\"search-bar\"\r\n                    className=\"search-input\"\r\n                    placeholder=\"Search\"\r\n                />\r\n                <input type=\"submit\" value={\"Search\"} className={\"submit-button\"}/>\r\n            </form>\r\n            <div id={\"definition-div\"}>\r\n                <ShowDefinitions />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst components = {SearchDefinition}\r\nexport default components;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}